{"version":3,"sources":["component/ContactCard.jsx","component/Addstd.jsx","component/Form.jsx","network.js","App.js","index.js"],"names":["ContactCard","Ctc","onOpen","getContactID","deleteCard","color","borderRadius","boxShadow","justify","bg","p","mb","align","size","icon","faUser","ml","name","email","mr","onClick","id","faEdit","faTrash","Addstd","isOpen","onClose","children","blockScrollOnMount","FormCom","addStudentList","update","updateStudentList","useState","setName","setEmail","submitBtn","type","value","onChange","e","target","placeholder","mt","colorScheme","AddDataOnServer","a","axios","post","process","data","console","log","GetstudentList","get","UpdateDataonServer","patch","DeleteDataonServer","delete","App","useDisclosure","isOpenEdit","onOpenEdit","onCloseEdit","Contact","setContact","useEffect","tempArray","Object","entries","forEach","key","push","ig","fatchStudentDetail","contactID","setContactId","SearchData","setSearchData","DataSearch","filter","con","includes","selectContact","find","Con","findIndex","item","prev","Form","src","h","w","as","fontSize","fontWeight","pointerEvents","focusBorderColor","map","Cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50ee5899.chunk.js","sourcesContent":["import { Box, Flex, Stack, Text } from '@chakra-ui/react';\r\nimport { faEdit, faTrash, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst ContactCard = ({Ctc,onOpen,getContactID, deleteCard})  => {\r\n  \r\n const PasscontactID=(id)=>{\r\n\r\n  getContactID(id);\r\n  onOpen();\r\n\r\n }\r\n \r\n const HandleDelete = (id)=>{\r\n   deleteCard(id);\r\n }\r\n\r\n    \r\n    return (\r\n        <>\r\n      \r\n        \r\n        <Flex \r\n    color=\"white\"\r\n    borderRadius=\"xl\"\r\n    boxShadow=\"xl\"\r\n    justify=\"space-between\" \r\n    bg=\"orange.400\" p=\"4\"\r\n    mb=\"4\">\r\n    <Flex align=\"center\">\r\n    <FontAwesomeIcon  color=\"white\" size=\"4x\" icon={faUser}/>\r\n      <Stack ml=\"4\">\r\n        <Text>{Ctc.name}</Text>\r\n        <Text>{Ctc.email}</Text>\r\n      </Stack>\r\n    </Flex>\r\n    <Flex align=\"center\">\r\n      <Box mr=\"4\" onClick={()=>PasscontactID(Ctc.id)}>\r\n      <FontAwesomeIcon color=\"white\" size=\"2x\" icon={faEdit}/>\r\n      </Box>\r\n      <Box onClick={()=>HandleDelete(Ctc.id)}>\r\n      <FontAwesomeIcon color=\"white\" size=\"2x\" icon={faTrash}/>\r\n      </Box>\r\n      \r\n    </Flex>\r\n     \r\n    </Flex>\r\n        \r\n        \r\n        \r\n        </>\r\n\r\n  )\r\n}\r\n\r\nexport default ContactCard;","import { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\r\nimport React, {Children} from 'react';\r\n\r\nconst Addstd = ({ isOpen, onOpen, onClose ,children}) => {\r\n   \r\n\r\n    return (\r\n      <>\r\n        \r\n  \r\n        <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Modal Title</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n            {children}\r\n              \r\n            </ModalBody>\r\n  \r\n            <ModalFooter>\r\n             \r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Addstd","import { Button, FormControl, FormLabel, Input } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\n\r\nconst FormCom = ({addStudentList,onClose,update,updateStudentList}) => {\r\n    const[name,setName]=useState(update?update.name:\"\");\r\n    const[email,setEmail]=useState(update?update.email:\"\");\r\n\r\n    function submitBtn(){\r\n\r\n      if (update){\r\n\r\n        updateStudentList(name,email,update.id);\r\n        onClose();\r\n      }\r\n\r\n\r\n      else{\r\n        addStudentList(name,email);\r\n        onClose();\r\n      }\r\n\r\n        \r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n         <FormControl>\r\n              <FormLabel>First name</FormLabel>\r\n              <Input type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}} placeholder='First name' />\r\n             </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Last name</FormLabel>\r\n              <Input type=\"text\" value={email} onChange={(e)=>{setEmail(e.target.value)}} placeholder='Last name' />\r\n             </FormControl>\r\n             {\r\n               update ?( <Button onClick={submitBtn} colorScheme='blue' mr={3} >\r\n               Update\r\n             </Button>):(\r\n                <Button onClick={submitBtn} colorScheme='blue' mr={3} >\r\n                Add Now\r\n              </Button>\r\n             )\r\n             }\r\n            \r\n           </>\r\n  )\r\n}\r\n\r\nexport default FormCom;","import axios from \"axios\";\r\n\r\nexport const AddDataOnServer =async (name,email)=>{\r\n    try{\r\n        const {data} = await axios.post(`${process.env.REACT_APP_SERVER}/contacts.json`,{name,email});\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.log(error);    }\r\n}\r\nexport const GetstudentList =async (name,email)=>{\r\n    try{\r\n        const {data} = await axios.get(`${process.env.REACT_APP_SERVER}/contacts.json`,);\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.log(error);    }\r\n}\r\nexport const UpdateDataonServer =async (name,email,id)=>{\r\n    try{\r\n        const {data} = await axios.patch(`${process.env.REACT_APP_SERVER}/contacts/${id}.json`,{name,email});\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.log(error);    }}\r\n        export const DeleteDataonServer =async (id)=>{\r\n            try{\r\n                const {data} = await axios.delete(`${process.env.REACT_APP_SERVER}/contacts/${id}.json`,);\r\n                return data;\r\n            }\r\n            catch(error){\r\n                console.log(error);    }}","import React, { useEffect, useState } from \"react\";\nimport {Box,Flex,Image,Heading, Button, InputGroup, InputLeftElement, Input, Stack, Text, useDisclosure, FormControl, FormLabel} from \"@chakra-ui/react\";\nimport {AddIcon, SearchIcon} from \"@chakra-ui/icons\";\nimport ContactCard from \"./component/ContactCard\";\nimport Addstd from './component/Addstd';\nimport FormCom from \"./component/Form\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {AddDataOnServer,GetstudentList,UpdateDataonServer,DeleteDataonServer } from \"./network\";\nconst App = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  console.log(\"hey all\");\n  console.log(process.env.REACT_APP_SERVER);\n  const { isOpen:isOpenEdit, onOpen:onOpenEdit, onClose:onCloseEdit } = useDisclosure();\n const [Contact,setContact]=useState([]);\n\nuseEffect ( () =>{\n\n  const fatchStudentDetail = async ()=>{\n\n    const data = await GetstudentList ();\n    const tempArray=[];\n\n    if(data!==null){\n      Object.entries(data).forEach(([key,value])=>{\n\n        tempArray.push({ig:key,name:value.name,email:value.email});\n       \n        setContact(tempArray);\n  \n      })\n\n    }\n    \n  \n\n  }\n  fatchStudentDetail();\n \n\n\n},[])\n\n const [contactID,setContactId] = useState();\n\n const [SearchData,setSearchData]=useState(\"\");\n\nlet DataSearch = Contact.filter((con)=>con.name.includes(SearchData));\n\n const getContactID= (id) =>{\n   setContactId(id);\n\n }\n \n let selectContact = Contact.find((Con)=>Con.id===contactID);\n \n\n const addStudentList= async (name,email)=>{\n  \n \n  if(Contact.findIndex((item)=> item.email===email )===-1 && email !== \"\"){\n\n  const data = await AddDataOnServer(name,email);\n   console.log(data);\n   setContact([...Contact,{name,email,id:data.name}]);\n  }\n\n }\n const updateStudentList = async (name,email,id) => {\n \n \n const data = await UpdateDataonServer(name,email,id);\n\n  \n  setContact(prev=>[...Contact.filter((con)=>con.id!== id),{name:data.name,email:data.email,id}])\n\n }\n const deleteCard=async(id)=>{\n\n  const data =await DeleteDataonServer(id);\n  if(data === null){\n  setContact(prev=>[...Contact.filter((con)=>con.id!==id)])\n  }\n }\n\n\n \n return (\n  \n  <>\n  <Addstd  isOpen={isOpen} onOpen={onOpen} onClose={onClose}>\n    \n      <>\n      <Stack>\n           <FormCom addStudentList={addStudentList} onClose={onClose}/>\n            \n      </Stack>\n      </>\n\n\n  </Addstd>\n  <Addstd  isOpen={isOpenEdit} onOpen={onOpenEdit} onClose={onCloseEdit}>\n    \n    <>\n    <Stack>\n         <FormCom addStudentList={addStudentList} onClose={onCloseEdit} update={selectContact}  updateStudentList={ updateStudentList} />\n          \n    </Stack>\n    </>\n\n\n</Addstd>\n  <Box>\n    <Flex align=\"center\" justify=\"center\" p=\"4\">\n      <Image src=\"./logo.png\" h=\"80px\" w=\"100px\"></Image>\n      <Heading as=\"h1\">CONTACT US</Heading>\n    </Flex>\n    <Box p=\"4\">\n      <Button\n      onClick={onOpen}\n      bg=\"orange.400\"\n      color=\"white\"\n      colorScheme=\"orange\"\n       w=\"full\"\n        p=\"2\" \n        fontSize=\"xl\" \n        fontWeight=\"bold\"\n        ><AddIcon h=\"20px\" w=\"20px\" mr=\"4\"/>ADD CONTACT</Button>\n    </Box>\n    <Box p=\"4\"> \n      <InputGroup>\n    <InputLeftElement \n      pointerEvents='none'\n      children={<SearchIcon color='gray.300' />}\n    />\n    <Input onChange={(e)=>setSearchData(e.target.value)} focusBorderColor=\"orange.400\" type='tel' placeholder='Search Contact...' />\n  </InputGroup>\n  </Box>\n  <Box p=\"4\">\n    {DataSearch.map((Cont) => \n       <ContactCard Ctc={Cont} key={Contact.id} onOpen={onOpenEdit} getContactID={getContactID}  deleteCard={deleteCard} />\n)}\n   \n  </Box>\n  </Box>\n  </>\n  \n  );\n};\n\nexport default App;\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      \n          <App />\n\n         \n     \n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}